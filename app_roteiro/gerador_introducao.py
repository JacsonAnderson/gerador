import os
from pathlib import Path
from dotenv import load_dotenv
from openai import OpenAI
import json

# Carregar API_KEY do arquivo .env
load_dotenv()
api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    raise RuntimeError("‚ùå OPENAI_API_KEY n√£o encontrada no .env")

client = OpenAI(api_key=api_key)

def gerar_introducao(canal, video_id, log=print):
    log(f"üé¨ Gerando introdu√ß√£o para {canal}/{video_id}...")

    control_path = Path("data") / canal / video_id / "control"
    topicos_path = control_path / "topicos.txt"
    introducao_path = control_path / "introducao.txt"
    canal_config_path = Path("db") / "canais" / f"{canal}.json"

    if introducao_path.exists():
        log(f"‚ö†Ô∏è Introdu√ß√£o j√° existente para {canal}/{video_id}.")
        return True

    if not topicos_path.exists():
        log(f"‚ùå Arquivo de t√≥picos n√£o encontrado em {topicos_path}.")
        return False

    if not canal_config_path.exists():
        log(f"‚ùå Arquivo de configura√ß√£o do canal n√£o encontrado em {canal_config_path}.")
        return False

    with open(topicos_path, "r", encoding="utf-8") as f:
        topicos = f.read()

    with open(canal_config_path, "r", encoding="utf-8") as f:
        canal_config = json.load(f)
        idioma = canal_config.get("idioma", "").lower()

    # Define instru√ß√£o extra para idioma
    instrucoes_idioma = ""
    if "es" in idioma:  # Se idioma configurado cont√©m 'es' (Espanhol)
        instrucoes_idioma = "\n\n‚ö†Ô∏è IMPORTANTE: Toda a resposta deve obrigatoriamente ser escrita em Espanhol (Espanhol neutro latino, sem misturar portugu√™s ou outros idiomas)."

    prompt = f"""
Voc√™ √© um especialista em criar introdu√ß√µes extremamente persuasivas, emocionais e envolventes para v√≠deos do YouTube, especialmente focados em conte√∫dos espirituais e inspiracionais.

Utilizando o nome do canal "{canal}" e considerando cuidadosamente os t√≥picos apresentados abaixo, sua miss√£o √© criar uma introdu√ß√£o breve (m√°ximo de 200 palavras) que imediatamente capture a aten√ß√£o do espectador, despertando profunda curiosidade e uma conex√£o emocional genu√≠na, fazendo com que ele n√£o consiga parar de assistir ao v√≠deo at√© o final.

A introdu√ß√£o precisa obrigatoriamente:

- Criar um impacto emocional imediato (nos primeiros segundos do v√≠deo), fazendo o p√∫blico sentir que est√° prestes a receber uma mensagem pessoal √∫nica e profundamente importante para a sua vida.
- Transmitir uma sensa√ß√£o forte de urg√™ncia e relev√¢ncia pessoal, levando o espectador a sentir que as respostas que ele tanto busca est√£o prestes a serem reveladas.
- Instigar uma profunda curiosidade sobre os t√≥picos abordados, deixando claro que assistir ao v√≠deo inteiro ir√° gerar uma transforma√ß√£o real e positiva na vida do espectador.
- Apresentar o canal "{canal}" como uma fonte confi√°vel, poderosa e capaz de fornecer solu√ß√µes pr√°ticas e mensagens reconfortantes que v√£o al√©m das expectativas comuns.
- Manter uma linguagem emocionalmente rica, direta e persuasiva, SEM mencionar diretamente quaisquer t√©cnicas ou m√©todos espec√≠ficos utilizados para a cria√ß√£o do roteiro.
- N√ÉO usar frases gen√©ricas de transi√ß√£o como "vamos come√ßar", "prepare-se", "acompanhe agora", "vem comigo" ou qualquer express√£o semelhante.
- A introdu√ß√£o deve encerrar-se de forma **suave, natural e elegante**, como uma continua√ß√£o fluida que simplesmente conduz o espectador diretamente para o primeiro t√≥pico, sem interrup√ß√µes abruptas, sem comandos expl√≠citos e sem que o p√∫blico perceba que a introdu√ß√£o terminou.

Importante:
- Sem di√°logos adicionais, apenas a introdu√ß√£o narrativa fluida.
- Se existir qualquer di√°logo adicional ou chamada para a√ß√£o expl√≠cita, a resposta ser√° automaticamente anulada.

Use os t√≥picos abaixo como refer√™ncia direta para o conte√∫do da introdu√ß√£o, destacando sutilmente (sem cit√°-los diretamente um a um) que o v√≠deo cont√©m mensagens importantes e espec√≠ficas relacionadas a esses temas:

T√≥picos do V√≠deo:
{topicos}

{instrucoes_idioma}

üìù Gere agora a introdu√ß√£o curta, altamente impactante, emocionalmente rica e naturalmente fluida abaixo:
"""

    try:
        resposta = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.8,
        )

        introducao_gerada = resposta.choices[0].message.content.strip()

        with open(introducao_path, "w", encoding="utf-8") as f:
            f.write(introducao_gerada)

        log(f"‚úÖ Introdu√ß√£o salva em {introducao_path}")
        return True

    except Exception as e:
        log(f"‚ùå Erro ao gerar introdu√ß√£o: {e}")
        return False
